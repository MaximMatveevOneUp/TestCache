name: Build Bundles Android Develop(Self-Hosted)

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      restoreCache:
        description: 'Restore Cache'
        required: false
        default: true
        type: boolean
      saveCache:
        description: 'Save Cache'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: [ self-hosted,Linux,unity ]
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v2.7.0

      - name: Set values
        id: values
        run: |
          echo "restoreCache=${{ github.event.inputs.restoreCache || false }}" >> $GITHUB_ENV
          echo "saveCache=${{ github.event.inputs.saveCache || true }}" >> $GITHUB_ENV
          echo "cacheFolderPath=$SHARED_BUILD_FOLDER_PATH/cache/android/" >> $GITHUB_ENV
          echo "bundlesFolderPath=$SHARED_BUILD_FOLDER_PATH/bundles/android/" >> $GITHUB_ENV

      - name: Generate summary
        run: |
          echo "Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY      
          echo "Restore Cache: ${{ env.restoreCache }}" >> $GITHUB_STEP_SUMMARY  
          echo "Save Cache: ${{ env.saveCache }}" >> $GITHUB_STEP_SUMMARY             

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Restore Unity Library from Cache
        uses: one-up-games/github-action-cache-local-fs/restore@main
        ## https://oneupgamesgroup.slack.com/archives/C024NHCRVS9/p1681727489220929
        if: env.restoreCache == 'true'
        with:
          cache-base-path: ${{ env.cacheFolderPath }}
          path: GGClient/Library
          key: android-${{ env.CI_REF_NAME_SLUG }}
          restore-keys: |
            android-develop
            android-

      - name: Setup
        uses: one-up-games/unity-builder@BuildResultFix
        env:
          acceleratorAddress: ${{ vars.ACCELERATOR_ADDRESS }}
        with:
          unityLicensingServer: ${{ vars.UNITY_LICENSE_SERVER_ADDRESS }}          
          versioning: None
          projectPath: GGClient
          targetPlatform: Android
          customParameters: -EnableCacheServer -cacheServerEndpoint ${{ env.acceleratorAddress }} -cacheServerEnableDownload true -cacheServerEnableUpload false -buildSettingsPreset Develop -cleanedlogfile setup_log_file.txt
          buildMethod: Code.GGClient.Build.Editor.Builder.ApplySettings
          allowDirtyBuild: true

      - name: Get setup errors form log file
        if: failure()
        uses: one-up-games/errors-from-logs@main
        with:
          logFile: setup_log_file.txt

      - name: Build Bundles Android
        uses: one-up-games/unity-builder@BuildResultFix
        env:
          acceleratorAddress: ${{ vars.ACCELERATOR_ADDRESS }}
        with:
          unityLicensingServer: ${{ vars.UNITY_LICENSE_SERVER_ADDRESS }}          
          versioning: None
          projectPath: GGClient
          targetPlatform: Android
          customParameters: -EnableCacheServer -cacheServerEndpoint ${{ env.acceleratorAddress }} -cacheServerEnableDownload true -cacheServerEnableUpload false -bundlesBuildPath ${{ env.bundlesFolderPath}} -cleanedlogfile bundles_build_log_file.txt
          buildMethod: Code.GGClient.Build.Editor.Builder.BuildBundles
          allowDirtyBuild: true

      - name: Get build errors form log file
        if: failure()
        uses: one-up-games/errors-from-logs@main
        with:
          logFile: bundles_build_log_file.txt

      - name: Save Unity Library to Cache
        uses: one-up-games/github-action-cache-local-fs/save@main
        ## https://oneupgamesgroup.slack.com/archives/C024NHCRVS9/p1681727489220929
        if: env.saveCache == 'true'
        with:
          cache-base-path: ${{ env.cacheFolderPath }}
          path: GGClient/Library
          key: android-${{ env.CI_REF_NAME_SLUG }}

