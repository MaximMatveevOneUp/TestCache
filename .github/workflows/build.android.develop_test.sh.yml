name: Build Android Develop test (Self-Hosted)

on:
  push:
  schedule:
    - cron: '1/3 * * * *' 
  workflow_dispatch:
    inputs:
      standName:
        description: 'Stand by default'
        required: true
        default: 'CST1'
        type: choice
        options:
          - RELEASE
          - STAGE
          - SST1
          - CST1
          - QST1
          - PST1
      developmentBuild:
        description: 'Development Build'
        required: true
        default: true
        type: boolean
      allowDebugging:
        description: 'Allow Debugging'
        required: true
        default: false
        type: boolean
      buildWithDeepProfilingSupport:
        description: 'Deep Profiling Support'
        required: true
        default: false
        type: boolean
      restoreCache:
        description: 'Restore Cache'
        required: false
        default: true
        type: boolean
      saveCache:
        description: 'Save Cache'
        required: false
        default: true
        type: boolean
      androidAppBundle:
        description: 'Android AppBundle'
        required: true
        default: false
        type: boolean
      exportProject:
        description: 'Export Android Studio Project'
        required: true
        default: false
        type: boolean
      buildSettingsPreset:
        type: choice
        description: 'BuildSettings preset name'      
        options: 
        - Develop
        - Release
        default: Develop       

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:          
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v2.7.0

      - name: Set values
        id: values
        run: |
          echo "buildWithDeepProfilingSupport=${{ github.event.inputs.buildWithDeepProfilingSupport || false }}" >> $GITHUB_ENV
          echo "restoreCache=${{ github.event.inputs.restoreCache || false}}" >> $GITHUB_ENV
          echo "saveCache=${{ github.event.inputs.saveCache || true}}" >> $GITHUB_ENV
          echo "standName=${{ github.event.inputs.standName || 'CST1'}}" >> $GITHUB_ENV
          echo "androidExportType=${{ github.event.inputs.androidExportType || 'androidPackage'}}"  >> $GITHUB_ENV
          echo "CACHE_FOLDER_PATH=$SHARED_BUILD_FOLDER_PATH/cache/android/"  >> $GITHUB_ENV        

      - name: Generate summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY      
          echo "developmentBuild: ${{ github.event.inputs.developmentBuild }}" >> $GITHUB_STEP_SUMMARY
          echo "saveCache: ${{ env.saveCache }}" >> $GITHUB_STEP_SUMMARY       
          echo "standName=${{ env.standName }}" >> $GITHUB_STEP_SUMMARY
          echo "androidExportType=${{ env.androidExportType || androidPackage}}"  >> $GITHUB_STEP_SUMMARY
          echo "allowDebugging: ${{ github.event.inputs.allowDebugging }}" >> $GITHUB_STEP_SUMMARY          

      - name: Save state
        run: echo "Bramch=${{ env.CI_REF_NAME }}" >> $GITHUB_STATE

      - name: Set output
        run: echo "Branch=${{ env.CI_REF_NAME }}" >> $GITHUB_OUTPUT

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Unity Library from Cache
        uses: MaximMatveevOneUp/github-action-cache-local-fs/restore@main
        with:
          cache-base-path: ${{ env.CACHE_FOLDER_PATH }}
          path: /Users/maxim.m/Repositories/TestCache/Library
          key: android-${{ env.CI_REF_NAME_SLUG }}
          restore-keys: |
            android-develop
            android-

      - name: Save Unity Library to Cache
        uses: MaximMatveevOneUp/github-action-cache-local-fs/save@main
        if: env.saveCache == 'true'
        with:
          cache-base-path: ${{ env.CACHE_FOLDER_PATH }}
          path: /Users/maxim.m/Repositories/TestCache/Library
          key: android-${{ env.CI_REF_NAME_SLUG }}
